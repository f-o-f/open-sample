{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///external \"mongodb\"","webpack:///./src/middleware/mongodbClient.ts","webpack:///./src/router/goods/index.ts","webpack:///./src/server.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","connectOption","useNewUrlParser","useUnifiedTopology","callback","connect","err","client","db","router","post","req","res","next","goods_id","body","size","amount","note","console","log","undefined","status","json","message","mongodbClient","close","collection","insertOne","result","res1","find","app","listen","use","extended","header","goods"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"express\");","module.exports = require(\"body-parser\");","module.exports = require(\"mongodb\");","import * as MongoDB from 'mongodb';\r\n\r\nconst url = 'mongodb://localhost:27017';\r\nexport const dbName = 'open-sample';\r\nconst connectOption = {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n}\r\nexport default function (callback: (err: MongoDB.MongoError, client: MongoDB.MongoClient, db: MongoDB.Db) => void) {\r\n    const client = MongoDB.MongoClient;\r\n    client.connect(url, connectOption, (err, client) => {\r\n        if (err) {\r\n            callback(err, null, null);\r\n            return;\r\n        }\r\n        callback(null, client, client.db(dbName));\r\n    });\r\n}","import * as Express from 'express';\r\n//import errorJSON from '../../error';\r\nimport mongodbClient from '../../middleware/mongodbClient';\r\nimport { GoodsDocument } from '../../middleware/GoodsDocument';\r\n\r\n\r\nconst router = Express.Router();\r\n//商品情報登録\r\nrouter.post('/', (req, res, next) => {\r\n    // パラメータ取得\r\n    const goods_id = req.body.goods_id;\r\n    const name = req.body.name;\r\n    const size = req.body.size;\r\n    const amount = req.body.amount;\r\n    const note = req.body.note;\r\n    console.log(name);\r\n    console.log(goods_id);\r\n    // 必須項目が入力済みかチェック\r\n    if (goods_id === undefined || name === undefined) {\r\n        res.status(400).json({ message: 'Require Parameter.' });\r\n        return next();\r\n    }\r\n\r\n    mongodbClient((err, client, db) => {\r\n        if (err) {\r\n            client.close();\r\n            res.status(500).json({message: err.message});\r\n            return next(err);\r\n        }\r\n\r\n        const collection = db.collection<GoodsDocument>('goods');\r\n        collection.insertOne(\r\n            {\r\n                name :name,\r\n                goods_id :goods_id,\r\n                size :size,\r\n                amount :amount,\r\n                note :note,\r\n    \r\n            },\r\n            (err, result) => {\r\n                if (err) {\r\n                    client.close();\r\n                    res.status(500).json({message:err.message});\r\n                    return next(err);\r\n                }\r\n\r\n                \r\n               // res.status(200).json(result);\r\n                client.close();\r\n                res.json(result);\r\n            }\r\n        );\r\n    });\r\n});\r\n\r\n/* //商品情報更新\r\nrouter.put('/:id', (req, res, next) => {\r\n    // URLから対象のuser_idを取得\r\n    const user_id = req.params.user;\r\n\r\n    // JSONより更新用パラメータを取得\r\n    const new_user_id = req.body.user_id;\r\n    const name = req.body.name;\r\n    const password = req.body.password;\r\n\r\n    // 更新用オブジェクト作成\r\n    const updateFields = {};\r\n    if (new_user_id !== undefined) { updateFields['user_id'] = new_user_id; }\r\n    if (name !== undefined) { updateFields['name'] = name; }\r\n    if (password !== undefined) { updateFields['password'] = password; }\r\n    const update = { $set: updateFields };\r\n\r\n    mongodbClient((err, client, db) => {\r\n        if (err) {\r\n            client.close();\r\n            res.status(500).json(errorJSON('MongoDB', err.message));\r\n            return next(err);\r\n        }\r\n\r\n        const collection = db.collection<UserDocument>('user');\r\n        collection.findOneAndUpdate({ user_id: user_id }, update, (err, result) => {\r\n            if (err) {\r\n                client.close();\r\n                res.status(500).json(errorJSON('MongoDB', err.message));\r\n                return next(err);\r\n            }\r\n\r\n            if (result.value === null) {\r\n                // 対象レコードが存在しなかった場合 result.value に null が返る。\r\n                client.close();\r\n                res.status(404).json({ message: 'Not Found.' });\r\n                return;\r\n            }\r\n\r\n            // 更新後のdocumentを取得するために再検索する。\r\n            collection.findOne({ _id: result.value._id }, (err, result) => {\r\n                if (err) {\r\n                    client.close();\r\n                    res.status(500).json(errorJSON('MongoDB', err.message));\r\n                    return next(err);\r\n                }\r\n\r\n                client.close();\r\n                res.json(filterUserDocument(result));\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\n */\r\n\r\n\r\n/*\r\n//商品情報更新\r\nrouter.put('/:id', noImpl);\r\n//商品情報取得\r\nrouter.get('/:id', noImpl);*/\r\n//商品情報検索\r\nrouter.post('/search', (req, res1, next) => {\r\n     mongodbClient((err, client, db) => {\r\n        if (err) {\r\n            client.close();\r\n            res1.status(500).json({message: err.message});\r\n            return next(err);\r\n        }\r\n\r\n        const collection = db.collection<GoodsDocument>('goods');\r\n        collection.find((err, result) => {\r\n            if (err) {\r\n                client.close();\r\n                res1.status(500).json({message: err.message});\r\n                return next(err);\r\n            }\r\n\r\n            client.close();\r\n\r\n            if (result == null) {\r\n                res1.status(404).json({ message: 'Not found.'});\r\n            }  else\r\n            res1.status(200).json(result);\r\n        })\r\n\r\n        ;\r\n    }); \r\n});\r\n\r\nexport default router;","import * as Express from 'express';\r\nimport * as BodyParser from 'body-parser';\r\n\r\nimport goods from './router/goods';\r\n//import dev from './router/dev';\r\nconst app = Express();\r\napp.listen(3000);\r\napp.use(BodyParser.urlencoded({ extended: true }));\r\napp.use(BodyParser.json());\r\napp.use(function(req, res, next) {\r\n    res.header(\"Access-Control-Allow-Origin\", \"*\");     // セキュリティリスク有り\r\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\r\n    next();\r\n  });\r\napp.use(Express.static('./front'));\r\napp.use('/goods', goods);\r\n\r\n\r\n/* app.post('/goods/search', (req: Express.Request, res: Express.Response, next: Express.NextFunction) => {\r\n    return res.send('Hello Nyanko.');\r\n}); */ \r\n//app.use('/dev', dev);\r\n//app.listen(3000);\r\n\r\napp.use((req, res) => {\r\n    res.status(404).json({ message: 'Not Found API.' });\r\n});\r\nexport default app;"],"sourceRoot":""}