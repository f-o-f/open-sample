{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/goods/goods-create/goods-create.component.ts","./src/app/goods/goods-create/goods-create.component.html","./src/app/goods/goods-details/goods-details.component.ts","./src/app/goods/goods-details/goods-details.component.html","./src/app/goods/goods-list/goods-list.component.ts","./src/app/goods/goods-list/goods-list.component.html","./src/app/goods/goods-update/goods-update.component.ts","./src/app/goods/goods-update/goods-update.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/shared/models/goods.ts","./src/app/shared/services/goods.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { MenuComponent } from '@app/menu/menu.component';\r\nimport { GoodsListComponent } from '@app/goods/goods-list/goods-list.component';\r\nimport { GoodsDetailsComponent } from '@app/goods/goods-details/goods-details.component';\r\nimport { GoodsUpdateComponent } from '@app/goods/goods-update/goods-update.component';\r\nimport { GoodsCreateComponent } from '@app/goods/goods-create/goods-create.component';\r\nconst routes: Routes = [\r\n  { path: 'goods', component: MenuComponent },\r\n  { path: 'goods/create', component: GoodsCreateComponent },\r\n  { path: 'goods/update', component: GoodsUpdateComponent },\r\n  { path: 'goods/details', component: GoodsDetailsComponent },\r\n  { path: 'goods/list', component: GoodsListComponent },\r\n  { path: '', redirectTo: 'goods', pathMatch: 'prefix' },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { environment } from '@environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'client';\r\n  constructor(private translate: TranslateService) {\r\n    translate.setDefaultLang(environment.defaultLang);\r\n    translate.use(environment.defaultLang);\r\n  }\r\n}\r\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule,HttpClient } from '@angular/common/http';\r\nimport { AppRoutingModule } from '@app/app-routing.module';\r\nimport { AppComponent } from '@app/app.component';\r\nimport { GoodsListComponent } from '@app/goods/goods-list/goods-list.component';\r\nimport { GoodsDetailsComponent } from '@app/goods/goods-details/goods-details.component';\r\nimport { GoodsUpdateComponent } from '@app/goods/goods-update/goods-update.component';\r\nimport { GoodsCreateComponent } from '@app/goods/goods-create/goods-create.component';\r\nimport { MenuComponent } from '@app/menu/menu.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatProgressSpinnerModule, MatSpinner } from '@angular/material/progress-spinner'\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HeaderComponent } from '@app/header/header.component';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GoodsListComponent,\r\n    GoodsDetailsComponent,\r\n    GoodsUpdateComponent,\r\n    GoodsCreateComponent,\r\n    MenuComponent,\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatButtonModule\r\n  ],\r\n  entryComponents: [\r\n    MatSpinner\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Goods } from '@shared/models/goods';\r\nimport { GoodsService } from '@shared/services/goods.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-goods-create',\r\n  templateUrl: './goods-create.component.html',\r\n  styleUrls: ['./goods-create.component.scss']\r\n})\r\nexport class GoodsCreateComponent implements OnInit {\r\n  public goodsForm!: FormGroup;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private goodsService: GoodsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.goodsForm = new FormGroup({\r\n      name: new FormControl('', [\r\n        Validators.required,     \r\n        Validators.maxLength(30)\r\n      ]),\r\n      goods_id: new FormControl('', [\r\n        Validators.required,    \r\n        Validators.minLength(5),  \r\n        Validators.maxLength(5),  \r\n        Validators.pattern('^[A]+[0-9]{4}')\r\n      ]),\r\n      size: new FormControl('', [\r\n        Validators.required\r\n      ]),\r\n      amount: new FormControl(['']),\r\n      note: new FormControl(['']),\r\n    });\r\n  }\r\n\r\n\r\n  saveGoods() {\r\n    const { name, goods_id, size, amount, note } = this.goodsForm.getRawValue();\r\n    this.goodsService.set(new Goods(name, goods_id, size, amount, note))\r\n      .subscribe((res) => {\r\n        if (res != Error) {\r\n          this.router.navigate(['/goods']);\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"title\" translate>\r\n    goods_registration\r\n  </div>\r\n  <form (ngSubmit)=\"saveGoods()\" #formCheck=\"ngForm\" [formGroup]=\"goodsForm\">\r\n    <div class=\"create-form\">\r\n      <div class=\"create-line\">\r\n        <label translate>goods_id_required</label>\r\n        <div>\r\n          <input type=\"text\" formControlName=\"goods_id\" required minlength=\"5\" maxlength=\"5\">\r\n          <div class=\"caution\"\r\n            *ngIf=\"goodsForm.controls['goods_id'].errors && (goodsForm.controls['goods_id'].dirty || goodsForm.controls['goods_id'].touched) \">\r\n            <div *ngIf=\"goodsForm.controls['goods_id'].errors.required\" translate>\r\n              no_goods_id_entered\r\n            </div>\r\n            <div *ngIf=\"goodsForm.controls['goods_id'].errors.minlength \r\n          || goodsForm.controls['goods_id'].errors.maxlength \r\n          || goodsForm.controls['goods_id'].errors.pattern\" translate>\r\n              show_example\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"create-line\">\r\n        <label translate>name_required</label>\r\n        <div>\r\n          <input type=\"text\" formControlName=\"name\" required maxlength=\"30\">\r\n          <div class=\"caution\"\r\n            *ngIf=\"goodsForm.controls['name'].errors && (goodsForm.controls['name'].dirty || goodsForm.controls['name'].touched) \">\r\n            <div *ngIf=\"goodsForm.controls['name'].errors.required\" translate>\r\n              no_name_entered\r\n            </div>\r\n            <div *ngIf=\"goodsForm.controls['name'].errors.maxlength\" translate>\r\n              enter_within_30\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"create-line\">\r\n        <label translate>size_required</label>\r\n        <div>\r\n          <input type=\"number\" formControlName=\"size\" required>\r\n          <div class=\"caution\"\r\n            *ngIf=\"goodsForm.controls['size'].errors && (goodsForm.controls['size'].dirty || goodsForm.controls['size'].touched) \">\r\n            <div *ngIf=\"goodsForm.controls['size'].errors.required\" translate>\r\n              no_size_entered\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"create-line\">\r\n        <label translate>amount</label>\r\n        <input type=\"number\" formControlName=\"amount\">\r\n      </div>\r\n      <div class=\"create-line\">\r\n        <label translate>note</label>\r\n        <input type=\"text\" formControlName=\"note\">\r\n      </div>\r\n    </div>\r\n    <div class=\"footer\">\r\n      <button class=\"button\" [class.disabled]=\"formCheck.invalid\"><span translate>register</span></button>\r\n    </div>\r\n  </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Goods } from '@shared/models/goods';\r\nimport { GoodsService } from '@shared/services/goods.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-goods-details',\r\n  templateUrl: './goods-details.component.html',\r\n  styleUrls: ['./goods-details.component.scss']\r\n})\r\nexport class GoodsDetailsComponent implements OnInit {\r\n  goods: Goods;  \r\n  constructor(private goodsService: GoodsService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.goodsService.get()\r\n      .subscribe((goods: Goods) => {\r\n        this.goods = goods;\r\n      })\r\n  }\r\n\r\n  updateGoods() {\r\n    let id = this.goods.goods_id;\r\n    this.goodsService.setId(id);\r\n    this.router.navigate(['/goods/update']);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"title\" translate>goods_details</div>\r\n    <div class=\"product-detail-container\">\r\n      <div class=\"param-line\">\r\n        <div class=\"label\" translate>goods_id</div>\r\n        <div class=\"value\">{{ goods?.goods_id }}</div>\r\n      </div>\r\n      <div class=\"param-line\">\r\n        <div class=\"label\" translate>name</div>\r\n        <div class=\"value\">{{ goods?.name }}</div>\r\n      </div>\r\n      <div class=\"param-line\">\r\n        <div class=\"label\" translate>size</div>\r\n        <div class=\"value\">{{ goods?.size }}</div>\r\n      </div>\r\n      <div class=\"param-line\">\r\n        <div class=\"label\" translate>amount</div>\r\n        <div class=\"value\">{{ goods?.amount }}</div>\r\n      </div>\r\n      <div class=\"param-line\">\r\n        <div class=\"label\" translate>note</div>\r\n        <div class=\"value\">{{ goods?.note }}</div>\r\n      </div>\r\n    </div>\r\n    <div class=\"footer\">\r\n      <div class=\"button cancel\" routerLink=\"/goods/list\" translate>back</div>\r\n      <div class=\"button\" (click) = \"updateGoods()\" translate>update</div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Goods } from '@shared/models/goods';\r\nimport { GoodsService } from '@shared/services/goods.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nexport interface PeriodicElement {\r\n  name: string;\r\n  goods_id: string;\r\n  size: number;\r\n  amount: number;\r\n  note: string;\r\n}\r\n@Component({\r\n  selector: 'app-goods-list',\r\n  templateUrl: './goods-list.component.html',\r\n  styleUrls: ['./goods-list.component.scss']\r\n})\r\nexport class GoodsListComponent implements OnInit {\r\n  goodsList: Goods[] = [];\r\n  goods: Goods;\r\n  private ELEMENT_DATA: PeriodicElement[] = [];\r\n  displayedColumns: string[] = ['goods_id', 'name', 'size', 'detail'];\r\n  dataSource = new MatTableDataSource<PeriodicElement>(this.ELEMENT_DATA);\r\n  constructor(private router: Router, private goodsService: GoodsService,) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.goodsService.list()\r\n      .subscribe((goodsList: Goods[]) => {\r\n        this.ELEMENT_DATA = goodsList;\r\n        this.dataSource = new MatTableDataSource<PeriodicElement>(this.ELEMENT_DATA);\r\n      })\r\n  }\r\n  getGoods(id: string) {\r\n    this.goodsService.setId(id);\r\n    this.router.navigate(['/goods/details']);\r\n  }\r\n}","<div class=\"container\">\r\n  <div class=\"title\" translate>goods_list</div>\r\n  <div class=\"goods-list-container\">\r\n    <div class=\"mat-elevation-z8\">\r\n      <mat-spinner *ngIf=\"!dataSource\"></mat-spinner>\r\n      <mat-table [dataSource]=\"dataSource\">\r\n        <ng-container matColumnDef=\"name\">\r\n          <mat-header-cell *matHeaderCellDef translate>name</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let elememt\">{{elememt?.name}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"goods_id\">\r\n          <mat-header-cell *matHeaderCellDef translate>goods_id</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let elememt\">{{elememt?.goods_id}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"size\">\r\n          <mat-header-cell *matHeaderCellDef translate>size</mat-header-cell>\r\n          <mat-cell *matCellDef=\"let elememt\">{{elememt?.size}}</mat-cell>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"detail\">\r\n          <mat-header-cell *matHeaderCellDef translate></mat-header-cell>\r\n          <mat-cell *matCellDef=\"let elememt\">\r\n            <a (click)=\"getGoods(elememt.goods_id)\">\r\n              <div class=\"button\" translate>detail</div>\r\n            </a>\r\n          </mat-cell>\r\n        </ng-container>\r\n        <mat-header-row *matHeaderRowDef=\"displayedColumns;\"></mat-header-row>\r\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\r\n      </mat-table>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Goods } from '@shared/models/goods';\r\nimport { GoodsService } from '@shared/services/goods.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-goods-update',\r\n  templateUrl: './goods-update.component.html',\r\n  styleUrls: ['./goods-update.component.scss']\r\n})\r\nexport class GoodsUpdateComponent implements OnInit {\r\n  goods: Goods;\r\n  goodsForm = new FormGroup({\r\n    name: new FormControl('', [\r\n      Validators.required,   \r\n      Validators.maxLength(30)\r\n    ]),\r\n    goods_id: new FormControl('', [\r\n      Validators.required,  \r\n      Validators.minLength(5), \r\n      Validators.maxLength(5),  \r\n      Validators.pattern('^[A]+[0-9]{4}')\r\n    ]),\r\n    size: new FormControl('', [\r\n      Validators.required\r\n    ]),\r\n    amount: new FormControl(''),\r\n    note: new FormControl(''),\r\n  });\r\n  constructor(\r\n    private router: Router,\r\n    private goodsService: GoodsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.goodsService.get()\r\n      .subscribe((goods: Goods) => {\r\n        this.goodsForm.setValue({\r\n          goods_id: goods.goods_id,\r\n          name: goods.name,\r\n          size: goods.size,\r\n          amount: goods.amount,\r\n          note: goods.note,\r\n        })\r\n      })\r\n  }\r\n  updateGoods(): void {\r\n    const { name, goods_id, size, amount, note } = this.goodsForm.getRawValue(); // <= 追加\r\n    this.goods = new Goods(name, goods_id, size, amount, note);\r\n    console.log(this.goods);\r\n    this.goodsService.update(this.goods);\r\n    this.router.navigate(['/goods']);\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"title\" translate>\r\n        goods_update\r\n    </div>\r\n    <form (ngSubmit)=\"updateGoods()\" #formCheck=\"ngForm\" [formGroup]=\"goodsForm\">\r\n        <div class=\"update-form\">\r\n            <div class=\"update-line\">\r\n                <label translate>goods_id</label>\r\n                <span>{{ goodsForm.controls.goods_id.value }}</span>\r\n            </div>\r\n\r\n            <div class=\"update-line\">\r\n                <label translate>name</label>\r\n                <div>\r\n                    <input type=\"text\" formControlName=\"name\" required maxlength=\"30\">\r\n                    <div class=\"caution\"\r\n                        *ngIf=\"goodsForm.controls['name'].errors && (goodsForm.controls['name'].dirty || goodsForm.controls['name'].touched) \">\r\n                        <div *ngIf=\"goodsForm.controls['name'].errors.required\" translate>\r\n                            no_name_entered\r\n                        </div>\r\n                        <div *ngIf=\"goodsForm.controls['name'].errors.maxlength\" translate>\r\n                            enter_within_30\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"update-line\">\r\n                <label translate>size</label>\r\n                <div>\r\n                    <input type=\"number\" formControlName=\"size\" required>\r\n                    <div class=\"caution\"\r\n                        *ngIf=\"goodsForm.controls['size'].errors && (goodsForm.controls['size'].dirty || goodsForm.controls['size'].touched) \">\r\n                        <div *ngIf=\"goodsForm.controls['size'].errors.required\" translate>\r\n                            no_size_entered\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"update-line\">\r\n                <label translate>amount</label>\r\n                <input type=\"number\" formControlName=\"amount\">\r\n            </div>\r\n\r\n            <div class=\"update-line\">\r\n                <label translate>note</label>\r\n                <input type=\"text\" formControlName=\"note\">\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"footer\">\r\n            <div class=\"button cancel\" routerLink=\"/goods/details\" translate>back</div>\r\n            <button class=\"button\" [class.disabled]=\"formCheck.invalid\"><span translate>update</span></button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\">\r\n    <div fxFlex=\"70px\" style=\"background-color:#4C2307; color:#CCC9A1\" fxLayoutAlign=\"center center\">\r\n        <font size=\"4\" translate>goods_management_system</font>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n  constructor(private router: Router) {\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"title\" translate>menu</div>\r\n    <div fxLayout=\"row\" style=\"height: 400px\">\r\n        <div fxFlex  fxLayoutAlign=\"center center\">\r\n            <div class=\"button\" routerLink=\"/goods/create\" translate>\r\n                register\r\n            </div>\r\n        </div>\r\n        <div fxFlex  fxLayoutAlign=\"center center\">\r\n            <div class=\"button\" routerLink=\"/goods/list\" translate>\r\n                search\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export class Goods {\r\n    name: string;\r\n    goods_id: string;\r\n    size: number;\r\n    amount: number;\r\n    note: string;\r\n    _id: string;\r\n  \r\n    constructor(name, goods_id,size, amount,note) {\r\n      this.name = name;\r\n      this.goods_id = goods_id;\r\n      this.size = size;\r\n      this.amount = amount;\r\n      this.note = note;\r\n    }\r\n  }","import { Injectable } from '@angular/core';\r\nimport { Goods } from '@shared/models/goods';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class GoodsService {\r\n  goods_id: string;\r\n  goods: Goods;\r\n  private url = 'http://localhost:3000';\r\n  constructor(\r\n    private http: HttpClient,\r\n  ) { }\r\n  //一覧\r\n  list(): Observable<any> {\r\n    return this.http.post(this.url + '/goods/search', {'Content-Type': 'application/json'})\r\n      .pipe(\r\n        map((response: any) => {\r\n          if (response) {\r\n            return Object.keys(response).map((key: string) => {\r\n              const gd = response[key];\r\n              return new Goods(gd.name, gd.goods_id, gd.size, gd.amount, gd.note);\r\n            });\r\n          } else {\r\n            return [];\r\n          }\r\n        }),\r\n        catchError(this.handleError())\r\n      )\r\n  }\r\n\r\n  //明細\r\n  get(): Observable<any> {\r\n    return this.http.get(this.url + '/goods/' + this.goods_id)\r\n      .pipe(\r\n        map((response: any) => {\r\n          return new Goods(response.name, response.goods_id, response.size, response.amount, response.note);\r\n        }),\r\n        catchError(this.handleError())\r\n      )\r\n  }\r\n\r\n  //登録\r\n  set(goods: Goods): Observable<any> {\r\n    return this.http.post(this.url + '/goods', goods)\r\n      .pipe(\r\n        map((response: any) => { }\r\n        ),\r\n        catchError(this.handleError())\r\n      )\r\n  }\r\n\r\n  setId(goods_id: string): void {\r\n    this.goods_id = goods_id;\r\n  }\r\n\r\n  update(goods: Goods): Observable<any> {\r\n    return this.http.put(this.url + '/goods/' + goods.goods_id, goods)\r\n    .pipe(\r\n      map((response: any) => { }\r\n      ),\r\n      catchError(this.handleError())\r\n    )\r\n  }\r\n\r\n  handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      console.log(`${operation} failed: ${error.message}`);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  defaultLang: 'ja'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}