{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/goods/goods-create/goods-create.component.ts","./src/app/goods/goods-create/goods-create.component.html","./src/app/goods/goods-details/goods-details.component.ts","./src/app/goods/goods-details/goods-details.component.html","./src/app/goods/goods-list/goods-list.component.ts","./src/app/goods/goods-list/goods-list.component.html","./src/app/goods/goods-update/goods-update.component.ts","./src/app/goods/goods-update/goods-update.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/shared/models/goods.ts","./src/app/shared/services/goods.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { MenuComponent } from './menu/menu.component';\nimport { GoodsListComponent } from './goods/goods-list/goods-list.component';\nimport { GoodsDetailsComponent } from './goods/goods-details/goods-details.component';\nimport { GoodsUpdateComponent } from './goods/goods-update/goods-update.component';\nimport { GoodsCreateComponent } from './goods/goods-create/goods-create.component';\nconst routes: Routes = [\n  { path: 'goods', component: MenuComponent },\n  { path: 'goods/create', component: GoodsCreateComponent },\n  { path: 'goods/update', component: GoodsUpdateComponent },\n  { path: 'goods/details', component: GoodsDetailsComponent },\n  { path: 'goods/list', component: GoodsListComponent },\n  { path: '', redirectTo: '/goods', pathMatch: 'prefix' },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GoodsListComponent } from './goods/goods-list/goods-list.component';\nimport { GoodsDetailsComponent } from './goods/goods-details/goods-details.component';\nimport { GoodsUpdateComponent } from './goods/goods-update/goods-update.component';\nimport { GoodsCreateComponent } from './goods/goods-create/goods-create.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GoodsListComponent,\n    GoodsDetailsComponent,\n    GoodsUpdateComponent,\n    GoodsCreateComponent,\n    MenuComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Goods } from '../../shared/models/goods';\nimport { GoodsService } from '../../shared/services/goods.service';\nimport { Router } from '@angular/router';\nimport { FormGroup,FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-goods-create',\n  templateUrl: './goods-create.component.html',\n  styleUrls: ['./goods-create.component.scss']\n})\nexport class GoodsCreateComponent implements OnInit {\n  goodsForm = new FormGroup({\n    name: new FormControl(''),\n    goods_id: new FormControl(''),\n    size: new FormControl(''),\n    amount: new FormControl(''),\n    note: new FormControl(''),\n  });\n  //goods:Goods;\n  constructor(private router: Router,\n    private goodsService: GoodsService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  async saveGoods() {\n    const { name, goods_id, size,amount,note } = this.goodsForm.getRawValue();\n    await this.goodsService.set(new Goods(name, goods_id,size,amount,note))\n    .then(()=>{\n      \n      this.router.navigate(['/goods']);\n    }\n    )\n    .catch((msg:String)=>{\n      console.log(msg);\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"title\">\n      商品登録\n    </div>\n    <form [formGroup]=\"goodsForm\">\n      <div class=\"create-form\">\n        <div class=\"create-line\">\n          <label>商品ID</label>\n          <input type=\"text\" formControlName=\"goods_id\">\n        </div>\n        <div class=\"create-line\">\n          <label>名前</label>\n          <input type=\"text\" formControlName=\"name\">\n        </div>\n        <div class=\"create-line\">\n          <label>サイズ</label>\n          <input type=\"number\" formControlName=\"size\">\n        </div>\n        <div class=\"create-line\">\n          <label>量</label>\n          <input type=\"number\" formControlName=\"amount\">\n        </div>\n        <div class=\"create-line\">\n          <label>メモ</label>\n          <input type=\"text\" formControlName=\"note\">\n        </div>\n      </div>\n    <div class=\"footer\">\n      <div class=\"button black\" (click)=\"saveGoods()\">登録</div>\n    </div>\n  </form>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Goods } from '../../shared/models/goods';\nimport { GoodsService } from '../../shared/services/goods.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-goods-details',\n  templateUrl: './goods-details.component.html',\n  styleUrls: ['./goods-details.component.scss']\n})\nexport class GoodsDetailsComponent implements OnInit {\n  goods:Goods;\n  constructor(private goodsService: GoodsService,private router: Router) { }\n\n  async ngOnInit() {\n    await this.goodsService.get()\n    .then((goods:Goods)=>{\n    this.goods = goods;\n    })\n    .catch((msg:String)=>{\n      console.log(msg);\n    })\n  }\n\n  saveGoods() {\n    var id = this.goods.goods_id; \n    this.goodsService.setId(id);\n    this.router.navigate(['/goods/update']);\n  }\n}\n","<div class=\"container\">\n    <div class=\"title\">商品詳細<div class=\"button-return\" routerLink=\"/goods/list\">戻る</div></div>\n    <div class=\"product-detail-container\">\n      <div class=\"param-line\">\n        <div class=\"label\">ID</div>\n        <div class=\"value\">{{ goods.goods_id }}</div>\n      </div>\n      <div class=\"param-line\">\n        <div class=\"label\">名前</div>\n        <div class=\"value\">{{ goods.name }}</div>\n      </div>\n      <div class=\"param-line\">\n        <div class=\"label\">サイズ</div>\n        <div class=\"value\">{{ goods.size }}</div>\n      </div>\n      <div class=\"param-line\">\n        <div class=\"label\">量</div>\n        <div class=\"value\">{{ goods.amount }}</div>\n      </div>\n      <div class=\"param-line\">\n        <div class=\"label\">メモ</div>\n        <div class=\"value\">{{ goods.note }}</div>\n      </div>\n    </div>\n    <div class=\"footer\">\n      <div class=\"button\" (click) = \"saveGoods()\">更新</div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Goods } from '../../shared/models/goods';\nimport { GoodsService } from '../../shared/services/goods.service';\nimport { Router } from '@angular/router';\n//import { HttpClient ,HttpHeaders,HttpParams } from '@angular/common/http';\n/* class GoodsListElement extends Goods {\n  hovered: boolean;\n  constructor(name, goods_id,size, amount,note,hovered) {\n    super(name,goods_id,size,amount,note);\n    this.hovered = hovered;\n  }\n} */\n\n@Component({\n  selector: 'app-goods-list',\n  templateUrl: './goods-list.component.html',\n  styleUrls: ['./goods-list.component.scss']\n})\nexport class GoodsListComponent implements OnInit {\n  goodsList:Goods[]=[]; \n  constructor(private router: Router,private goodsService: GoodsService,) {}\n\nasync ngOnInit(){\n  await this.goodsService.list()\n    .then((goodsList:Goods[])=>{\n      this.goodsList = goodsList;\n     }) \n    .catch((msg:String)=>{\n     console.log(msg);\n   })\n  }\n\n  //hovered(goods: GoodsListElement): void { goods.hovered = true; } \n  //unhovered(goods: GoodsListElement): void { goods.hovered = false; } \n \n  saveGoods(id:string){\n    this.goodsService.setId(id);\n    this.router.navigate(['/goods/details']);\n  }  \n}","<div class=\"container\">\n    <div class=\"title\">商品一覧</div>\n    <div class=\"goods-list-container\">\n      <div class=\"waiting-for-goods\" *ngIf=\"goodsList === []; else goodslist\">\n        商品を取得しています...\n      </div>\n       <ng-template #goodslist> \n        <div class=\"goods-list-table\">\n          <div class=\"goods-line header\">\n            <div class=\"goods-name\">名前</div>\n            <div class=\"goods-goods_id\">ID</div>\n            <div class=\"goods-size\">サイズ</div>\n    \n          </div>\n          <div class=\"goods-line\" *ngFor = \"let goods of goodsList\">\n            <div class=\"goods-name\">{{ goods.name }} </div>\n            <div class=\"goods-goods_id\">{{ goods.goods_id }}</div>\n            <div class=\"goods-size\">{{ goods.size }}</div>\n            <div class=\"button\" (click) = \"saveGoods(goods.goods_id)\">明細</div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { Goods } from '../../shared/models/goods';\nimport { GoodsService } from '../../shared/services/goods.service';\nimport { Router } from '@angular/router';\nimport { FormGroup,FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-goods-update',\n  templateUrl: './goods-update.component.html',\n  styleUrls: ['./goods-update.component.scss']\n})\nexport class GoodsUpdateComponent implements OnInit {\n  goods:Goods;\n  goodsForm = new FormGroup({\n    name: new FormControl(''),\n    goods_id: new FormControl(''),\n    size: new FormControl(''),\n    amount: new FormControl(''),\n    note: new FormControl(''),\n  });\n  constructor(\n    private router: Router,\n    private goodsService: GoodsService,\n    //private fb: FormBuilder,\n    ) { }\n\n    async ngOnInit() {\n      await this.goodsService.get()\n      .then((goods:Goods)=>{\n        this.goodsForm.setValue({\n          goods_id: goods.goods_id,\n          name: goods.name,\n          size: goods.size,\n          amount: goods.amount,\n          note: goods.note,\n      })\n    })\n      .catch((msg:String)=>{\n        console.log(msg);\n      })\n    }\n  saveGoods(): void {\n    const { name, goods_id, size,amount,note } = this.goodsForm.getRawValue(); // <= 追加\n    this.goodsService.update(new Goods(name, goods_id,size,amount,note)); \n    this.router.navigate(['/goods']);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"title\">\n        商品編集\n    </div>\n    <form [formGroup]=\"goodsForm\">\n        <div class=\"update-form\">\n            <div class=\"update-line\">\n            <label>商品ID</label>\n            <span>{{ goodsForm.controls.goods_id.value }}</span>\n            </div>\n\n            <div class=\"update-line\">\n            <label>名前</label>\n            <input type=\"text\" formControlName=\"name\" >\n            </div>\n\n            <div class=\"update-line\">\n            <label>サイズ</label>\n            <input type=\"number\" formControlName=\"size\" >\n            </div>\n\n            <div class=\"update-line\">\n            <label>量</label>\n            <input type=\"number\" formControlName=\"amount\" >\n            </div>\n\n            <div class=\"update-line\">\n            <label>メモ</label>\n            <input type=\"text\" formControlName=\"note\" >\n            </div>\n            \n        </div>\n        <div class=\"footer\">\n            <div class=\"button black\" (click)=\"saveGoods()\">更新</div>\n            <div class=\"button white\" routerLink=\"/goods/details\">戻る</div>\n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div fxLayout=\"column\">\n    <div fxFlex=\"70px\" style=\"background-color:#4C2307; color:#CCC9A1\" fxLayoutAlign=\"center center\">\n        <font size=\"4\">商品管理システム</font>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {GoodsService} from '../shared/services/goods.service'\nimport { Goods } from '../shared/models/goods';\nimport { FormGroup,FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  goods:Goods;\n  goodsForm = new FormGroup({\n    goods_id: new FormControl(''),\n  });\n  constructor(private router: Router,\n    private goodsService: GoodsService\n    ) { }\n\n  ngOnInit(): void {\n  }\n  async saveGoods() {\n    const {goods_id} = this.goodsForm.getRawValue();\n    await this.goodsService.set(goods_id)\n    await this.goodsService.get()\n    .then((goods:Goods)=>{\n      this.goods = goods;\n     }\n    )\n    .catch((msg:String)=>{\n      console.log(msg);\n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"title\">メニュー</div>\n    <div fxLayout=\"row\" style=\"height: 400px\">\n        <div fxFlex  fxLayoutAlign=\"center center\">\n            <div class=\"button\" routerLink=\"/goods/create\">\n                登録\n            </div>\n        </div>\n        <div fxFlex  fxLayoutAlign=\"center center\">\n            <div class=\"button\" routerLink=\"/goods/list\">\n                検索\n            </div>\n        </div>\n    </div>\n<!--     <form [formGroup]=\"goodsForm\">\n            <label>商品ID</label>\n            <input type=\"text\" formControlName=\"goods_id\">\n            <div class=\"button black\" (click)=\"saveGoods()\">検索</div>\n    </form> -->\n\n<!--         <div class=\"goods-name\">名前{{ goods.name }}</div>\n        <div class=\"goods-goods_id\">ID{{ goods.goods_id }}</div>\n        <div class=\"goods-size\">サイズ{{ goods.size }}</div>\n        <div class=\"goods-amount\">量{{ goods.amount }}</div>\n        <div class=\"goods-note\">メモ{{ goods.note }}</div> -->\n        </div>","export class Goods {\r\n    name: string;\r\n    goods_id: string;\r\n    size: number;\r\n    amount: number;\r\n    note: string;\r\n    _id: string;\r\n  \r\n    constructor(name, goods_id,size, amount,note) {\r\n      this.name = name;\r\n      this.goods_id = goods_id;\r\n      this.size = size;\r\n      this.amount = amount;\r\n      this.note = note;\r\n    }\r\n  }","import { Injectable } from '@angular/core';\nimport { Goods } from '../models/goods';\nimport { HttpClient ,HttpHeaders, } from '@angular/common/http';\nimport { JsonPipe } from '@angular/common';\n\n\n@Injectable({providedIn: 'root'})\n\nexport class GoodsService {\n  private httpOptions: any = {\n\n     headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    }), \n    // DELETE 実行時に `body` が必要になるケースがあるのでプロパティとして用意しておく\n    // ( ここで用意しなくても追加できるけど... )\n    //body: null\n  };\n  goods_id:string;\n  //goods:Goods;\n  //goodsList :Goods[] =null;\n  private url = 'http://localhost:3000';//要変更\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  async list(): Promise<any> {\n    return await this.http.post(this.url + '/goods/search', this.httpOptions)\n    .toPromise()\n      .then(this.handleDataList)\n      .catch(this.handleFailure);\n  }\n  \n  async get():Promise<any>{\n    return await this.http.get(this.url + '/goods/'+this.goods_id, this.httpOptions)\n    .toPromise()\n      .then(this.filterGoodsDocument)\n        .then(this.handleData)\n      .catch(this.handleFailure);\n  }\n  async set(goods:Goods):Promise<any>{\n    await this.http.post(this.url + '/goods',goods, this.httpOptions)\n    .toPromise()\n      .then()\n      .catch(this.handleFailure);\n  }\n\n  setId(goods_id:string):void{\n    this.goods_id = goods_id;\n  }\n\n  async update(goods: Goods): Promise<any>{ \n    return await this.http.put(this.url + '/goods/'+goods.goods_id, goods,this.httpOptions)\n    .toPromise()\n      .then()\n      .catch(this.handleFailure);\n  }\n  handleDataSet(response: Response) : Promise<string> {\n    let msg : string;\n    return Promise.resolve(\"error\");\n  }\n filterGoodsDocument(doc: object) {\n    const denied = ['_bsontype','_id'];\n    return Object.keys(doc)\n        .filter(key => denied.indexOf(key) === -1)\n        .reduce((obj, key) => {\n            obj[key] = doc[key];\n            return obj;\n        }, {});\n}\n  handleData(doc: Object) : Promise<Goods> {\n    var goods: Goods;\n    var docs\n    docs = JSON.stringify(doc);\n    var obj = JSON.parse(docs);\n    var name = obj.name\n    var goods_id = obj.goods_id;\n    var size = obj.size;\n    var amount = obj.amount;\n    var note = obj.note;\n    goods = new Goods(name,goods_id,size, amount,note); \n    return Promise.resolve(goods);\n  }\n\n  handleDataList(response: Response) : Promise<Goods[]> {\n    var num =  Object.keys(response).length\n    var goodsList =[];\n    var goods: Goods;\n    for(var i = 0;i<num;i++){\n    var name = response[i].name;\n    var goods_id = response[i].goods_id;\n    var size = response[i].size;\n    var amount = response[i].amount;\n    var note = response[i].note;\n    \n    goods = new Goods(name,goods_id,size, amount,note);\n    goodsList.push(goods); \n\n   } \n    return Promise.resolve(goodsList);\n  }\n\n  handleFailure(response: Response) : Promise<string> {\n    let msg : string;\n    return Promise.reject(\"error\");\n  }\n\n\n/*\n  update(goods: Goods): void { \n    const index = this.goodslist.findIndex((gds:Goods) => gds.goods_id === goods.goods_id);\n    this.goodslist[index] = goods;\n  }*/\n}\n ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}